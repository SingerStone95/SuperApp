ext {
    sourceCompatibility = "1.8"
}// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript { //脚本的配置
    ext.kotlin_version = KOTLIN_VERSION
    ext.enable_maven_local = ENABLE_MAVEN_LOCAL
    ext.enable_supergradle = ENABLE_SUPERPLUGIN
    ext.booster_version = BOOSTER_VERSION

    println("kotlin_version=" + kotlin_version)
    println("enable_supergradle=" + enable_supergradle)
    println("kotlin_version=" + kotlin_version)

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google'
            allowInsecureProtocol = true
        }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'
            allowInsecureProtocol = true}

        mavenLocal()
        mavenCentral()
        maven {//本地Maven仓库地址
            url uri("$rootDir/MavenLocal")

        }
        maven {
            url "https://jitpack.io"
        }
        google()
    }
    dependencies {
        println("ENABLE_MAVEN_LOCAL=" + ENABLE_MAVEN_LOCAL)
        classpath 'com.android.tools.build:gradle:' + BUILD_TOOL_VERSION
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath('com.tencent.tinker:tinker-patch-gradle-plugin:1.9.1')
        if (ENABLE_SUPERPLUGIN == 'true') {
            classpath 'com.singerstone.plugin:supergradle:1.0.0'
        }
        if (ENABLE_BTRACE == 'true') {
            classpath 'com.bytedance.btrace:rhea-gradle-plugin:1.0.2'
        }
        // didi booster 相关
        classpath "com.didiglobal.booster:booster-gradle-plugin:$booster_version"
        classpath "com.didiglobal.booster:booster-transform-thread:$booster_version"
//        classpath "com.didiglobal.booster:booster-task-list-shared-library:$booster_version"
//        classpath "com.didiglobal.booster:booster-task-resource-deredundancy:$booster_version"
//        classpath "com.didiglobal.booster:booster-task-analyser:$booster_version"

    }
}

allprojects { //项目的配置
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven {//本地Maven仓库地址
            url uri("$rootDir/MavenLocal")

        }
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
    }
}

project.tasks.whenTaskAdded { Task theTask ->
    println('project.tasks.whenTaskAdded : task->' + theTask.getName())
    if (theTask.name == 'assembleDebug' || theTask.name == 'assembleRelease') {
        //theTask.dependsOn(check)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//根工程文件路径
println getRootDir().absolutePath
//build文件地址
println getBuildDir().absolutePath
//当前文件根目录
println getProjectDir().absolutePath


