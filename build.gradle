// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript { //脚本的配置
    ext.kotlin_version = KOTLIN_VERSION
    ext.enable_maven_local = ENABLE_MAVEN_LOCAL
    ext.enable_supergradle = ENABLE_SUPERPLUGIN

    println("kotlin_version=" + kotlin_version)
    println("enable_supergradle=" + enable_supergradle)
    println("kotlin_version=" + kotlin_version)

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenLocal()
        jcenter()
        maven {//本地Maven仓库地址
            url uri("$rootDir/MavenLocal")

        }
        maven {
            url "https://jitpack.io"
        }
        google()
        // google()
    }
    dependencies {
        println("ENABLE_MAVEN_LOCAL=" + ENABLE_MAVEN_LOCAL)
        classpath 'com.android.tools.build:gradle:' + BUILD_TOOL_VERSION
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.5"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        if (ENABLE_MAVEN_LOCAL == 'true') {
            println("ENABLE_MAVEN_LOCAL^=" + ENABLE_MAVEN_LOCAL)
            classpath 'com.tencent.mtt:toolplugins:' + TOOL_PLUGIN_VERSION
        }
        classpath('com.tencent.tinker:tinker-patch-gradle-plugin:1.9.1')
        if (ENABLE_SUPERPLUGIN == 'true') {
            classpath 'com.singerstone.plugin:supergradle:1.0.0'
        }

    }
}

allprojects { //项目的配置
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven {//本地Maven仓库地址
            url uri("$rootDir/MavenLocal")

        }
        mavenLocal()
        mavenCentral()
        google()
        jcenter()
    }
}

project.tasks.whenTaskAdded { Task theTask ->
    println('add task->' + theTask.getName())
    if (theTask.name == 'assembleDebug' || theTask.name == 'assembleRelease') {
        //theTask.dependsOn(check)
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


